import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as T,f as a}from"./app-9ea20e45.js";const i={},c=a('<figure><img src="https://img-blog.csdnimg.cn/img_convert/0b59eaba42b578929cf4284114a73b94.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>最近一段时间以来，关于HTTP/3的新闻有很多，越来越多的国际大公司已经开始使用HTTP/3了。</p><p>所以，HTTP/3已经是箭在弦上了，全面使用只是个时间问题，那么，作为一线开发者，我们也是时候了解下到底什么是HTTP/3，为什么需要HTTP/3了。</p><h1 id="一、关于http2" tabindex="-1"><a class="header-anchor" href="#一、关于http2" aria-hidden="true">#</a> 一、关于HTTP2</h1><h2 id="http-2-辉煌不在" tabindex="-1"><a class="header-anchor" href="#http-2-辉煌不在" aria-hidden="true">#</a> HTTP/2 辉煌不在？</h2><p>虽然HTTP/2标准在2015年5月就以RFC 7540正式发表了，并且多数浏览器在2015年底就支持了。</p><p>但是，真正被广泛使用起来要到2018年左右，但是也是在2018年，11月IETF给出了官方批准，认可HTTP-over-QUIC成为HTTP/3。</p><p>2018年的时候，那时候HTTP/2还是个新技术，刚刚开始有软件支持，短短两年过去了，现在HTTP/3已经悄然而至了。</p><p>**根据W3Techs的数据，截至2019年6月，全球也仅有36.5%的网站支持了HTTP/2。**所以，可能很多网站还没开始支持HTTP/2，HTTP/3就已经来了。</p><p>所以，对于很多网站来说，或许直接升级HTTP/3是一个更加正确的选择。</p><h2 id="回顾-http-2" tabindex="-1"><a class="header-anchor" href="#回顾-http-2" aria-hidden="true">#</a> 回顾 HTTP/2</h2><p>我默认大家对HTTP/2有了一定的基本了解。</p><p>我们知道，HTTP/2的诞生，主要是为了解决HTTP/1.1中的效率问题，HTTP/2中最核心的技术就是多路复用技术，即允许同时通过单一的HTTP/2.0连接发起多重的请求-响应消息。 <img src="https://img-blog.csdnimg.cn/img_convert/b4c1f312ac8e16edb503784d48ad1fbe.png" alt="" loading="lazy"></p>',13),r=[c];function n(p,h){return t(),T("div",null,r)}const s=e(i,[["render",n],["__file","HTTP2.html.vue"]]);export{s as default};
